#!/bin/bash
export POSIXLY_CORRECT=yes
export LC_NUMERIC=en_US.UTF-8
# FIT VUT 20/21 Projekt 1 IOS Richard Gajdosik(xgajdo33), bash 5.0.17 Windows WSL linux
# Editovane vo VIM-e
COMMAND=""
FILES_CONTENT=""
DATE_AFTER="1970-01-01 00:00:00"
DATE_BEFORE="2090-12-31 23:59:59"
TICKERS=""
WIDTH=1
WIDTH_GRAPH=1000
WIDTH_KONTROLA=0
COMMAND=""
FILES_CONTENT=""
DATE_AFTER="1970-01-01 00:00:00"
DATE_BEFORE="2090-12-31 23:59:59"
TICKERS=""
WIDTH=-1
WIDTH_GRAPH=1000
WIDTH_KONTROLA=0
print_help(){
echo "Argumenty:"
echo "list-tick	 	vypis zoznamu tickerov"
echo "profit	 		vypise celkovy profit z nakupu a predaja akcii"
echo "pos	 		vypise aktualne drzane akcie"
echo "last-price 		posledna znama cena tickerov"
echo "hist-ord	 	histogram poctu transakcii"
echo "graph-pos	 	vypis grafu drzanych pozicii"
echo "Filtre:"
echo "-a DATETIME 		iba zaznamy po datume"
echo "-b DATETIME             iba zaznamy pred datumom"
echo "-t TICKER 		uvazovane su iba tieto tickery"
echo "-w WIDTH 		sirka vypisu grafu"
echo "-h a --help vypise tuto napovedu"
}
list_tick(){
	FILES_CONTENT=`echo "$FILES_CONTENT" | awk -F ';' ' $2{
		array[$2];
	} END{for(k in  array){
		print k, array[k]		
			}
			}' | sort`
}
profit(){
	FILES_CONTENT=`echo "$FILES_CONTENT" | awk -F ';' '{ 
	if($3 == "sell")  
		SUM += ($4 * $6); 
	else if($3 == "buy")
		SUM -= ($4 * $6);
	} END { printf("%.2f", SUM) }'`
}
pos(){
FILES_CONTENT=`echo "$FILES_CONTENT" | awk -F ';' '$6{
posledna_cena[$2]=$4;
if($3 == "sell")
	array[$2]-=$6;
else if($3 == "buy")
	array[$2]+=$6;
} END{
	najvacsie_cislo=0
	for(x in array){
		pocet_medzier=0
		len=posledna_cena[x]*array[x]
		if(len < 0){
			len = -len
			pocet_medzier=1
		}
		while(len > 10){
			pocet_medzier+=1
			len = len / 10
		}
		pocet_medzier+=4
		if(najvacsie_cislo < pocet_medzier){
			najvacsie_cislo = pocet_medzier
		}
		}
	for(x in array){
		pocet_znakov=length(x)
		printf("%s", x)
		for(s = pocet_znakov; s < 10; s++){
			printf(" ")
		}
	printf(": ")
	#printf("\tposledna cena: %d pozicia:%d\t", posledna_cena[x], array[x])
	printf ("%"najvacsie_cislo".2f\n", posledna_cena[x]*array[x])
}
}' | sort -t: -nrk2,2`		
}
last_price(){
	FILES_CONTENT=`echo "$FILES_CONTENT" | awk -F ';' '$6{
	array[$2]=$4;
	} END{
	najvacsie_cislo=0
	for(x in array){
		pocet_medzier=0
		len=array[x]
		while(len > 10){
			pocet_medzier+=1
			len = len / 10
		}
		pocet_medzier+=4
		if(najvacsie_cislo < pocet_medzier){
			najvacsie_cislo=pocet_medzier
		}
	}
	for(x in array){
		pocet_znakov=length(x)
		printf("%s", x)
		for(s = pocet_znakov; s < 10; s++){
			printf(" ")
		}
		printf(": ")
		printf ("%"najvacsie_cislo".2f\n", array[x])
		             }
			}' | sort `
}
hist_ord(){
	FILES_CONTENT=`echo "$FILES_CONTENT" | awk -F ';' -v WIDTH="$WIDTH" '{
	hist[$2]+=1;
	} END{
	NAJVACSI=0
	for(x in hist){
		if(NAJVACSI < hist[x]){
		NAJVACSI=hist[x]
		}
	}
	if(WIDTH == -1){
		VYPOCET = 1
	} else {
		VYPOCET=NAJVACSI/WIDTH
	}
	for(x in hist){
		pocet=hist[x]
		pocet_znakov=length(x)

		printf("%s", x)
		for(s = pocet_znakov; s < 10; s++){
			printf(" ")
		}
		printf(": ")
			for(i = 1; i <= pocet/VYPOCET; i++){
			printf("#")
			}
		printf("\n")
		}
	}' | sort`
}
graph_pos(){
	FILES_CONTENT=`echo "$FILES_CONTENT" | awk -F ';' -v WIDTH="$WIDTH_GRAPH" '{
	posledna_cena[$2]=$4;
	if($3 == "sell")
		hist[$2]-=$6;
	else if($3 == "buy")
		hist[$2]+=$6;
	} END{
	NAJVACSI=0
	WIDTH=1
	for(x in hist){
		pomocna=hist[x]
		printf("%s: %d\n", x, pomocna)
		if(pomocna < 0){
			pomocna = -pomocna
		}
		if(NAJVACSI < pomocna){
		NAJVACSI=pomocna
		}
	}
	VYPOCET=NAJVACSI/WIDTH
	for(x in hist){
		pocet=posledna_cena[x]*hist[x]
		if(pocet < 0){
			pocet = -pocet
		}
		pocet_znakov=length(x)
		printf("%s", x)
		for(s = pocet_znakov; s < 10; s++){
			printf(" ")
		}
		printf(": ")
		for(i = 1; i <= pocet/VYPOCET; i++){
			if(hist[x] > 0){
				printf("#")
			} else if(hist[x] < 0) {
				printf("!")
			}			
		}
		printf("\n")
	}
}' | sort`
} 
while [ "$#" -gt 0 ]; do
	case "$1" in
		list-tick)
		       if [ -z "$COMMAND" ]
		       	then
				COMMAND="list_tick"
			else
				echo "Vela prikazov"
				exit -1
		      	fi	       
			shift
			;;
		profit)
			if [ -z "$COMMAND" ]
                        then
 				COMMAND="$1"
			else
				echo "Vela prikazov"
				exit -1
			fi
			shift
			;;
		pos)
			if [ -z "$COMMAND" ]
			then
				COMMAND="$1"
			else
				echo "Vela prikazov"
				exit -1
			fi
			shift
			;;
		last-price)
			if [ -z "$COMMAND" ]
			then
				COMMAND="last_price"
			else
				echo "Vela prikazov"
				exit -1
			fi
			shift
			;;
		hist-ord)
			if [ -z "$COMMAND" ]
			then
				COMMAND="hist_ord"
			else
				echo "Vela prikazov"
				exit -1
			fi
			shift
			;;
		graph-pos)
			#Nefunkcne
			if [ -z "$COMMAND" ]
			then
				COMMAND="graph_pos"
			else
				echo "Vela prikazov"
				exit -1
			fi
			shift
			;;
		-h)
			print_help
			exit 0
			;;
		--help)
			print_help
			exit 0
			;;
		-a)
			DATE_AFTER="$2"
			shift
			shift
			;;
		-b)
			DATE_BEFORE="$2"
			shift
			shift
			;;
		-t)
			TICKERS+="$2"
			TICKERS+=$' '
			shift
			shift
			;;
		-w)
			if [ $WIDTH_KONTROLA -eq 1 ]
			then
				echo "Zly argument:neni kladne cislo"
				exit -1
			else
				if [ "${2//[0-9]}" ] 
				then
					echo "Zly argument:neni kladne cislo"
					exit -1
				else
					if [ $2 -gt 0 ] 
					then
					  WIDTH="$2"
					  WIDTH_GRAPH="$2"
			  		else
					echo "Zly argument:neni kladne cislo"
				  	exit -1
					fi
				fi
			fi
			WIDTH_KONTROLA=1
			shift
			shift
			;;
		*.log)
			FILES_CONTENT+=`cat $1`
			FILES_CONTENT+=$'\n'
				shift
			;;
		*.tar.gz)	
			FILES_CONTENT+=`tar -Oxf $1`
				FILES_CONTENT+=$'\n'
			shift
			;;
		*)
			echo "Tento argument nepoznam"
			exit -1
			shift
			;;
		esac
	done	
FILES_CONTENT=`echo "$FILES_CONTENT" | awk -F ';' -v DATE_AFTER_VAR="$DATE_AFTER" '{if ($1 > DATE_AFTER_VAR) { print }}'`
FILES_CONTENT=`echo "$FILES_CONTENT" | awk -F ';' -v DATE_BEFORE_VAR="$DATE_BEFORE" '{if ($1 < DATE_BEFORE_VAR) { print }}'`
if [ -z "$TICKERS" ]
	then
		empty_variable=""	
	else
		FILES_CONTENT=`echo "$FILES_CONTENT" | awk -F ';' -v TICKERS_VAR="$TICKERS" 'BEGIN {split (TICKERS_VAR, tickers, " " );}
		$2{ for(i in tickers) if ($2 == tickers[i]) {print; break}}'`
fi
	if [ -z "$FILES_CONTENT" ]
	then
		FILES_CONTENT=$(tee)
		#echo "Ziaden log"
	fi
		$COMMAND
echo "$FILES_CONTENT"
exit 0
